{"version":3,"sources":["webpack:///./src/components/navigation.js","webpack:///./src/components/header.js","webpack:///./src/pages/index.js","webpack:///./src/pages/demo.js"],"names":["Links","GithubIcon","Navigation","className","to","href","role","style","width","height","viewBox","xmlns","d","page","title","version","fontSize","lineHeight","color","Side","Wrapper","Inner","Nav","Home","id","Demo","props","getObjectKeys","obj","keyList","Object","keys","map","k","forEach","f","push","concat","apply","setValues","values","setState","contentRenderer","state","length","options","noDataRenderer","textAlign","itemRenderer","item","methods","key","valueField","onClick","addItem","margin","type","checked","isSelected","labelField","dropdownRenderer","regexp","RegExp","search","SearchAndToggle","Buttons","areAllSelected","Button","clearAll","selectAll","value","onChange","setSearch","placeholder","Items","filter","test","searchBy","option","keepSelectedInList","Item","disabled","indexOf","ItemLabel","optionRenderer","Fragment","event","removeItem","label","inputRenderer","tabIndex","size","getInputSize","dropDown","onClear","multi","loading","find","opt","index","clearable","searchable","create","separator","forceOpen","handle","addPlaceholder","closeOnSelect","dropdownPosition","direction","dropdownHeight","render","this","maxWidth","StyledSelect","keepOpen","dropdownHandle","dropdownGap","onDropdownOpen","onDropdownClose","onClearAll","onSelectAll","noDataLabel","undefined","ClearButton","defaultValue","target","StyledHtmlSelect","StyledInput","JSON","stringify","React","Component","Select"],"mappings":"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","file":"component---src-pages-index-js-3d3d87e245a525a4bc7d.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\n\nconst Navigation = () => (\n  <Links>\n    <Link className=\"m1\" to=\"/\">\n      Home\n    </Link>\n\n    <Link className=\"m1\" to=\"api\">\n      API\n    </Link>\n\n    <Link to=\"examples\" className=\"m1\">\n      Examples\n    </Link>\n\n    <a href=\"https://github.com/sanusart/react-dropdown-select\" className=\"m1\">\n      <GithubIcon\n        role=\"img\"\n        style={{ width: '16px', height: '16px' }}\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <title>React dropdown select on GitHub</title>\n        <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n      </GithubIcon>\n    </a>\n  </Links>\n);\n\nNavigation.propTypes = {};\n\nconst Links = styled.div`\n  text-align: center;\n  background: #fff;\n  text-transform: uppercase;\n`;\n\nconst GithubIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  vertical-align: baseline;\n`;\n\nexport default Navigation;\n","import React from 'react';\nimport { version } from '../../../package';\nimport { Link } from 'gatsby';\n\nexport default ({ page, title }) =>\n  page === 'home' ? (\n    <div className=\"\">\n      <h3 className=\"m0\">v{version}</h3>\n      <span\n        className=\"block color-inherit\"\n        style={{ fontSize: '5vw', lineHeight: '1', color: '#0074D9' }}>\n        React dropdown select\n      </span>\n    </div>\n  ) : (\n    <div className=\"mb3\">\n      <header className=\"py2 mt3 border-bottom\">\n        <div className=\"sm-flex flex-center flex-wrap\">\n          <div className=\"flex-auto\">\n            <div className=\"mxn1\">\n              <Link to=\"/\" className=\"btn compact btn-link btn-small p1\">\n                react-dropdown-select\n              </Link>\n              <span>v{version}</span>\n            </div>\n            <h1 className=\"m0\" style={{ fontSize: '3rem', color: '#0074D9' }}>\n              {title}\n            </h1>\n          </div>\n        </div>\n      </header>\n      <div className=\"h5 mxn1\">\n        <Link to=\"/\" title=\"Home\" className=\"btn compact btn-link p1 regular\">\n          Home\n        </Link>\n        <span className=\"\">\n          <span className=\"muted\">/</span>\n          <span className=\"muted m1\">{title}</span>\n        </span>\n      </div>\n    </div>\n  );\n","import React from 'react';\nimport Header from '../components/header';\nimport Demo from '../pages/demo';\nimport Navigation from '../components/navigation';\nimport styled from '@emotion/styled';\n\nimport '../styles.css';\n\nconst Home = () => (\n  <Wrapper>\n    <div className=\"flex flex-wrap\">\n      <Side className=\"sm-col-12 md-col-6 border-right p1 overflow-auto home-Side\">\n        <Inner className=\"px0 col-11 lg-col-8 px1 mx-auto home-Inner\">\n          <Header page=\"home\" />\n          <h1 id=\"what-it-is-all-about\">Dropdown select for react</h1>\n\n          <p>\n            Customisable dropdown select/multi-select component for react with custom render\n            callback props to override inner components\n          </p>\n\n          <h3>\n            Install via <strong>npm</strong>:\n          </h3>\n\n          <pre>\n            <span>SHELL</span>npm install --save react-dropdown-select\n          </pre>\n\n          <h3>Use:</h3>\n\n          <pre>\n            <span>JSX</span>\n            {`import Select from 'react-dropdown-select';\n\nexport const App = ({ options }) => (\n  <Select\n    multi\n    options={options}\n    onChange={(values) => this.onChange(values)}\n  />\n);`}\n          </pre>\n        </Inner>\n      </Side>\n      <Side className=\"sm-col-12 md-col-6 p1 overflow-auto\">\n        <Nav className=\"sm-col-12 md-col-6 fixed top-0 right-0 p2 white bg-white\">\n          <Navigation />\n        </Nav>\n\n        <Inner className=\"col-11 lg-col-8 px1 mx-auto\">\n          <h1 className=\"center\">Demo</h1>\n          <Demo />\n        </Inner>\n      </Side>\n    </div>\n  </Wrapper>\n);\n\nconst Side = styled.div`\n  height: 100vh;\n`;\n\nconst Wrapper = styled.div`\n  width: 100vw;\n\n  pre {\n    overflow: auto;\n  }\n`;\n\nconst Inner = styled.div`\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n\nconst Nav = styled.div`\n  z-index: 2;\n  box-shadow: 153px -14px 40px #ccc;\n`;\n\nexport default Home;\n","import React from 'react';\n\nimport styled from '@emotion/styled';\n\nimport 'normalize.css';\nimport '../demo-styles.css';\n\nimport '../styles.css';\n\nimport Select from '../../../src';\n\nimport { options } from '../options';\n\nexport class Demo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      multi: true,\n      disabled: false,\n      loading: false,\n      contentRenderer: false,\n      dropdownRenderer: false,\n      inputRenderer: false,\n      itemRenderer: false,\n      optionRenderer: false,\n      noDataRenderer: false,\n      values: options ? [options.find((opt, index) => index === 3)] : [],\n      searchBy: 'name',\n      clearable: false,\n      searchable: true,\n      create: false,\n      separator: false,\n      forceOpen: false,\n      handle: true,\n      addPlaceholder: '+ add',\n      labelField: 'name',\n      valueField: 'email',\n      color: '#0074D9',\n      keepSelectedInList: true,\n      closeOnSelect: false,\n      dropdownPosition: 'bottom',\n      direction: 'ltr',\n      dropdownHeight: '300px'\n    };\n  }\n\n  getObjectKeys = (obj) => {\n    const keyList = Object.keys(obj).map(k => {\n    const keys = [];\n\n    if (typeof obj[k] !== 'string') {\n      Object.keys(obj[k]).forEach((f) => {\n        if (f === 'geo') return;\n\n        return keys.push(`${k}.${f}`);\n      });\n    } else {\n      keys.push(k);\n    }\n\n    return keys;\n  });\n\n  return [].concat.apply([], keyList)\n  };\n\n  setValues = (values) => this.setState({ values });\n\n  contentRenderer = ({ props, state }) => {\n    return (\n      <div>\n        {state.values.length} of {props.options.length} Selected\n      </div>\n    );\n  };\n\n  noDataRenderer = () => {\n    return (\n      <p style={{ textAlign: 'center' }}>\n        <strong>Ooops!</strong> No data found\n      </p>\n    );\n  };\n\n  itemRenderer = ({item, props, methods}) => (\n    <div key={item[props.valueField]} onClick={() => methods.addItem(item)}>\n      <div style={{ margin: '10px' }}>\n        <input type=\"checkbox\" checked={methods.isSelected(item)} />\n        &nbsp;&nbsp;&nbsp;{item[props.labelField]}\n      </div>\n    </div>\n  );\n\n  dropdownRenderer = ({ props, state, methods }) => {\n    const regexp = new RegExp(state.search, 'i');\n\n    return (\n      <div>\n        <SearchAndToggle color={this.state.color}>\n          <Buttons>\n            <div>Search and select:</div>\n            {methods.areAllSelected() ? (\n              <Button className=\"clear\" onClick={methods.clearAll}>\n                Clear all\n              </Button>\n            ) : (\n              <Button onClick={methods.selectAll}>Select all</Button>\n            )}\n          </Buttons>\n          <input\n            type=\"text\"\n            value={state.search}\n            onChange={methods.setSearch}\n            placeholder=\"Type anything\"\n          />\n        </SearchAndToggle>\n        <Items>\n          {props.options\n            .filter((item) => regexp.test(item[props.searchBy] || item[props.labelField]))\n            .map((option) => {\n              if (!this.state.keepSelectedInList && methods.isSelected(option)) {\n                return null;\n              }\n\n              return (\n                <Item\n                  disabled={option.disabled}\n                  key={option[props.valueField]}\n                  onClick={option.disabled ? null : () => methods.addItem(option)}>\n                  <input\n                    type=\"checkbox\"\n                    onChange={() => methods.addItem(option)}\n                    checked={state.values.indexOf(option) !== -1}\n                  />\n                  <ItemLabel>{option[props.labelField]}</ItemLabel>\n                </Item>\n              );\n            })}\n        </Items>\n      </div>\n    );\n  };\n\n  optionRenderer = ({ option, methods }) => (\n    <React.Fragment>\n      <div onClick={(event) => methods.removeItem(event, option, true)}>{option.label}</div>\n    </React.Fragment>\n  );\n\n  inputRenderer = ({ state, methods }) => (\n    <input\n      tabIndex=\"1\"\n      className=\"react-dropdown-select-input\"\n      size={methods.getInputSize()}\n      value={state.search}\n      onClick={() => methods.dropDown('open')}\n      onChange={methods.setSearch}\n      placeholder=\"Type in\"\n    />\n  );\n  onClear = () =>\n    this.setState({\n      values: []\n    });\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div>\n          <div style={{ maxWidth: '350px', margin: '0 auto' }}>\n            <StyledSelect\n              placeholder=\"Select peoples\"\n              addPlaceholder={this.state.addPlaceholder}\n              color={this.state.color}\n              disabled={this.state.disabled}\n              loading={this.state.loading}\n              searchBy={this.state.searchBy}\n              separator={this.state.separator}\n              clearable={this.state.clearable}\n              searchable={this.state.searchable}\n              create={this.state.create}\n              keepOpen={this.state.forceOpen}\n              dropdownHandle={this.state.handle}\n              dropdownHeight={this.state.dropdownHeight}\n              direction={this.state.direction}\n              multi={this.state.multi}\n              values={this.state.values}\n              labelField={this.state.labelField || 'name'}\n              valueField={this.state.valueField || 'email'}\n              options={options}\n              dropdownGap={5}\n              keepSelectedInList={this.state.keepSelectedInList}\n              onDropdownOpen={() => undefined}\n              onDropdownClose={() => undefined}\n              onClearAll={() => undefined}\n              onSelectAll={() => undefined}\n              onChange={(values) => this.setValues(values)}\n              noDataLabel=\"No matches found\"\n              closeOnSelect={this.state.closeOnSelect}\n              noDataRenderer={this.state.noDataRenderer ? () => this.noDataRenderer() : undefined}\n              dropdownPosition={this.state.dropdownPosition}\n              itemRenderer={\n                this.state.itemRenderer\n                  ? this.itemRenderer\n                  : undefined\n              }\n              inputRenderer={\n                this.state.inputRenderer\n                  ? this.inputRenderer\n                  : undefined\n              }\n              optionRenderer={\n                this.state.optionRenderer\n                  ? this.optionRenderer\n                  : undefined\n              }\n              contentRenderer={\n                this.state.contentRenderer\n                  ? this.contentRenderer\n                  : undefined\n              }\n              dropdownRenderer={\n                this.state.dropdownRenderer\n                  ? this.dropdownRenderer\n                  : undefined\n              }\n            />\n            <ClearButton onClick={this.onClear}>Clear</ClearButton>\n          </div>\n        </div>\n        <p>&nbsp;</p>\n        <p>\n          <input\n            type=\"checkbox\"\n            checked={this.state.multi}\n            onChange={() =>\n              this.setState({\n                multi: !this.state.multi\n              })\n            }\n          />{' '}\n          Multi\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.disabled}\n            onChange={() =>\n              this.setState({\n                disabled: !this.state.disabled\n              })\n            }\n          />{' '}\n          Disabled\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.loading}\n            onChange={() =>\n              this.setState({\n                loading: !this.state.loading\n              })\n            }\n          />{' '}\n          Loading\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.clearable}\n            onChange={() =>\n              this.setState({\n                clearable: !this.state.clearable\n              })\n            }\n          />{' '}\n          Clearable\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.searchable}\n            onChange={() =>\n              this.setState({\n                searchable: !this.state.searchable\n              })\n            }\n          />{' '}\n          Searchable\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.create}\n            onChange={() =>\n              this.setState({\n                create: !this.state.create\n              })\n            }\n          />{' '}\n          Create new entries\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.separator}\n            onChange={() =>\n              this.setState({\n                separator: !this.state.separator\n              })\n            }\n          />{' '}\n          Separator\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.handle}\n            onChange={() =>\n              this.setState({\n                handle: !this.state.handle\n              })\n            }\n          />{' '}\n          Dropdown handle\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.forceOpen}\n            onChange={() =>\n              this.setState({\n                forceOpen: !this.state.forceOpen\n              })\n            }\n          />{' '}\n          Stay open\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.contentRenderer}\n            onChange={() =>\n              this.setState({\n                contentRenderer: !this.state.contentRenderer\n              })\n            }\n          />{' '}\n          Custom content renderer\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.dropdownRenderer}\n            onChange={() =>\n              this.setState({\n                dropdownRenderer: !this.state.dropdownRenderer\n              })\n            }\n          />{' '}\n          Custom dropdown renderer\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.itemRenderer}\n            onChange={() =>\n              this.setState({\n                itemRenderer: !this.state.itemRenderer\n              })\n            }\n          />{' '}\n          Custom dropdown item renderer\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.keepSelectedInList}\n            onChange={() =>\n              this.setState({\n                keepSelectedInList: !this.state.keepSelectedInList\n              })\n            }\n          />{' '}\n          Keep selected item in a list\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.closeOnSelect}\n            onChange={() =>\n              this.setState({\n                closeOnSelect: !this.state.closeOnSelect\n              })\n            }\n          />{' '}\n          Close dropdown on select/deselect\n          <br />\n          Custom color{' '}\n          <input\n            type=\"color\"\n            defaultValue={this.state.color}\n            onChange={(event) =>\n              this.setState({\n                color: event.target.value\n              })\n            }\n          />\n          <br />\n          Dropdown position\n          <StyledHtmlSelect\n            defaultValue={this.state.dropdownPosition}\n            onChange={(event) => this.setState({ dropdownPosition: event.target.value })}>\n            <option value=\"auto\">auto</option>\n            <option value=\"top\">top</option>\n            <option value=\"bottom\">bottom</option>\n          </StyledHtmlSelect>\n          <br />\n          Dropdown Height:{' '}\n          <StyledInput\n            type=\"text\"\n            checked={this.state.dropdownHeight}\n            value={this.state.dropdownHeight}\n            onChange={(event) =>\n              this.setState({\n                dropdownHeight: event.target.value\n              })\n            }\n          />\n          <br />\n          Dropdown direction\n          <StyledHtmlSelect\n            defaultValue={this.state.direction}\n            onChange={(event) => this.setState({ direction: event.target.value })}>\n            <option value=\"auto\">auto</option>\n            <option value=\"rtl\">right-to-left</option>\n            <option value=\"ltr\">left-to-right</option>\n          </StyledHtmlSelect>\n          <br />\n          Add placeholder:{' '}\n          <StyledInput\n            type=\"text\"\n            checked={this.state.addPlaceholder}\n            value={this.state.addPlaceholder}\n            onChange={(event) =>\n              this.setState({\n                addPlaceholder: event.target.value\n              })\n            }\n          />\n          <br />\n          Search by field:{' '}\n          <StyledHtmlSelect\n            defaultValue={this.state.searchBy}\n            onChange={(event) => this.setState({ searchBy: event.target.value })}>\n            {this.getObjectKeys(options[0]).map((f) => (\n              <option key={f} value={f}>\n                {f}\n              </option>\n            ))}\n          </StyledHtmlSelect>\n          <br />\n          Label field:{' '}\n          <StyledHtmlSelect\n            defaultValue={this.state.labelField}\n            onChange={(event) =>\n              this.setState({\n                labelField: event.target.value,\n                searchBy: event.target.value\n              })\n            }>\n            {this.getObjectKeys(options[0]).map((f) => (\n              <option key={f} value={f}>\n                {f}\n              </option>\n            ))}\n          </StyledHtmlSelect>\n          <br />\n          Value field:{' '}\n          <StyledHtmlSelect\n            defaultValue={this.state.valueField}\n            onChange={(event) => this.setState({ valueField: event.target.value })}>\n            {this.getObjectKeys(options[0]).map((f) => (\n              <option key={f} value={f}>\n                {f}\n              </option>\n            ))}\n          </StyledHtmlSelect>\n        </p>\n\n        <details>\n          <summary>Options:</summary>\n          <pre>{JSON.stringify(options, null, 2)}</pre>\n        </details>\n\n        <details>\n          <summary>Selected values:</summary>\n          <pre>{JSON.stringify(this.state.values, null, 2)}</pre>\n        </details>\n      </div>\n    );\n  }\n}\n\nconst StyledSelect = styled(Select)`\n  ${({ dropdownRenderer }) =>\n    dropdownRenderer &&\n    `\n\t\t.react-dropdown-select-dropdown {\n\t\t\toverflow: initial;\n\t\t}\n\t`}\n`;\n\nconst SearchAndToggle = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin: 10px 10px 0;\n    line-height: 30px;\n    padding: 0 20px;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    :focus {\n      outline: none;\n      border: 1px solid ${({ color }) => color};\n    }\n  }\n`;\n\nconst Items = styled.div`\n  overflow: auto;\n  min-height: 10px;\n  max-height: 200px;\n`;\n\nconst Item = styled.div`\n  display: flex;\n  margin: 10px;\n  align-items: baseline;\n  cursor: pointer;\n  border-bottom: 1px dotted transparent;\n\n  :hover {\n    border-bottom: 1px dotted #ccc;\n  }\n\n  ${({ disabled }) =>\n    disabled\n      ? `\n  \topacity: 0.5;\n  \tpointer-events: none;\n  \tcursor: not-allowed;\n  `\n      : ''}\n`;\n\nconst ItemLabel = styled.div`\n  margin: 5px 10px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & div {\n    margin: 10px 0 0 10px;\n    font-weight: 600;\n  }\n`;\n\nconst Button = styled.button`\n  background: none;\n  border: 1px solid #555;\n  color: #555;\n  border-radius: 3px;\n  margin: 10px 10px 0;\n  padding: 3px 5px;\n  font-size: 10px;\n  text-transform: uppercase;\n  cursor: pointer;\n  outline: none;\n\n  &.clear {\n    color: tomato;\n    border: 1px solid tomato;\n  }\n\n  :hover {\n    border: 1px solid deepskyblue;\n    color: deepskyblue;\n  }\n`;\n\nconst StyledHtmlSelect = styled.select`\n  padding: 0;\n  margin: 0 0 0 10px;\n  height: 23px !important;\n  color: #0071dc;\n  background: #fff;\n  border: 1px solid #0071dc;\n`;\n\nconst StyledInput = styled.input`\n  margin: 0 0 0 10px;\n  height: 23px !important;\n  color: #0071dc;\n  background: #fff;\n  border: 1px solid #0071dc;\n  border-radius: 3px;\n  padding: 13px 10px;\n  width: 70px;\n`;\n\nconst ClearButton = styled.button`\n  margin: 0;\n  color: #0071dc;\n  background: #fff;\n  border: 1px solid #0071dc;\n  border-radius: 2px;\n  padding: 0 10px;\n  cursor: pointer;\n`;\n\nexport default Demo;\n"],"sourceRoot":""}